def merge(a, b):
    index_a = 0  
    index_b = 0  
    res = []  
    for _ in range(len(a) + len(b)):
        if index_a + 1 > len(a):
            res += b[index_b:]
            break
        elif index_b + 1 > len(b):
            res += a[index_a:]
            break
        if a[index_a] < b[index_b]:
            res += [a[index_a]]  
            index_a += 1  
        else:
            res += [b[index_b]]  
            index_b += 1
    return res


def mergeFast(lst):
    if len(lst) < 2: return lst
    middle = len(lst) // 2
    left = mergeFast(lst[:middle])
    right = mergeFast(lst[middle:])
    return merge(left, right)


def mergQuick(lst):
    if len(lst) < 2: return lst  
    pivot = lst[len(lst) // 2]  
    left = []  
    right = []  
    middle = []  
    for i in range(len(lst)): 
        if lst[i] < pivot:  
            left += [lst[i]] 
        elif lst[i] > pivot:  
            right += [lst[i]]  
        else: 
            middle += [lst[i]]  
    return mergQuick(left) + middle + mergQuick(right)  
